lincs
=====

Usage: lincs [OPTIONS] COMMAND [ARGS]...

  lincs (Learn and Infer Non-Compensatory Sorting) is a set of tools for
  training and using MCDA models.

Options:
  --help  Show this message and exit.

Commands:
  classification-accuracy  Compute a classification accuracy.
  classify                 Classify alternatives.
  generate                 Generate synthetic data.
  learn                    Learn a model.

lincs generate
==============

Usage: lincs generate [OPTIONS] COMMAND [ARGS]...

  Generate synthetic data.

Options:
  --help  Show this message and exit.

Commands:
  classification-domain    Generate a synthetic classification domain.
  classification-model     Generate a synthetic classification model.
  classified-alternatives  Generate synthetic classified alternatives.

lincs generate classification-domain
====================================

Usage: lincs generate classification-domain [OPTIONS] CRITERIA_COUNT
                                            CATEGORIES_COUNT

  Generate a synthetic classification domain.

  The generated domain has CRITERIA_COUNT criteria and CATEGORIES_COUNT
  categories.

Options:
  --output-domain FILENAME     Write generated domain to this file instead of
                               standard output.
  --random-seed INTEGER RANGE  The random seed to use.  [x>=0]
  --help                       Show this message and exit.

lincs generate classification-model
===================================

Usage: lincs generate classification-model [OPTIONS] DOMAIN

  Generate a synthetic classification model.

  DOMAIN is a *classification domain* file describing the domain to generate a
  model for.

Options:
  --output-model FILENAME         Write generated model to this file instead
                                  of standard output.
  --random-seed INTEGER RANGE     The random seed to use.  [x>=0]
  --model-type [mrsort]           The type of classification model to
                                  generate.  [default: mrsort]
  --mrsort.fixed-threshold FLOAT RANGE
                                  Use this pre-determined threshold instead of
                                  a pseudo-random one.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                  
                                  *  [0.0<=x<=1.0]
  --help                          Show this message and exit.

lincs generate classified-alternatives
======================================

Usage: lincs generate classified-alternatives [OPTIONS] DOMAIN MODEL
                                              ALTERNATIVES_COUNT

  Generate synthetic classified alternatives.

  DOMAIN is a *classification domain* file describing the domain to generate
  alternatives for. MODEL is a *classification model* file for that domain
  describing the model to use to classify the generated alternatives.

Options:
  --output-classified-alternatives FILENAME
                                  Write generated classified alternatives to
                                  this file instead of standard output.
  --max-imbalance FLOAT RANGE     @todo Define.  [0.0<=x<=1.0]
  --random-seed INTEGER RANGE     The random seed to use.  [x>=0]
  --help                          Show this message and exit.

lincs learn
===========

Usage: lincs learn [OPTIONS] COMMAND [ARGS]...

  Learn a model.

Options:
  --help  Show this message and exit.

Commands:
  classification-model  Learn a classification model.

lincs learn classification-model
================================

Usage: lincs learn classification-model [OPTIONS] DOMAIN LEARNING_SET
                                        [OUTPUT_MODEL]

  Learn a classification model.

  DOMAIN is a *classification domain* file describing the domain to learn a
  model for. LEARNING_SET is a *classified alternatives* file for that domain.
  It's used as a source of truth to learn the model.

  The learned *classification model* file is written to OUTPUT_MODEL, which
  defaults to - to write to the standard output.

Options:
  --target-accuracy FLOAT RANGE   The target accuracy to reach on the learning
                                  set.
                                  
                                  *  [default: 1.0; 0.0<=x<=1.0]
  --max-duration-seconds FLOAT RANGE
                                  The maximum duration of the learning process
                                  in seconds.
                                  
                                  *  [x>=0]
  --random-seed INTEGER RANGE     The random seed to use.
                                  
                                  Some learning strategies are deterministic,
                                  pseudo-random processes. This seed is used
                                  to initialize the pseudo-random number
                                  generator used by these strategies.
                                  
                                  *  [x>=0]
  --model-type [mrsort]           The type of classification model to learn.
  --mrsort.strategy [weights-profiles-breed]
                                  The top-level strategy to use to learn the
                                  MRSort model. See (@todo Add link to doc)
                                  for details about the available strategies.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                  
                                  *  [default: weights-profiles-breed]
  --mrsort.weights-profiles-breed.max-iterations INTEGER RANGE
                                  The maximum number of iterations to use to
                                  learn the MRSort model.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                  
                                  *  [x>=1]
  --mrsort.weights-profiles-breed.models-count INTEGER RANGE
                                  The number of temporary MRSort models to
                                  train. The result of the learning will be
                                  the most accurate of those models.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                  
                                  *  [default: 9; x>=1]
  --mrsort.weights-profiles-breed.initialization-strategy [maximize-discrimination-per-criterion]
                                  The strategy to use to initialize the MRSort
                                  models. See (@todo Add link to doc) for
                                  details about the available strategies.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                  
                                  *  [default: maximize-discrimination-per-
                                  criterion]
  --mrsort.weights-profiles-breed.weights-strategy [linear-program]
                                  The strategy to use to improve the weights
                                  of the MRSort models. See (@todo Add link to
                                  doc) for details about the available
                                  strategies.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                  
                                  *  [default: linear-program]
  --mrsort.weights-profiles-breed.linear-program.solver [glop]
                                  The solver to use to solve the linear
                                  programs. See (@todo Add link to doc) for
                                  details of available solvers.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                   - '--mrsort.weights-profiles-breed.weights-strategy' is 'linear-program'
                                  
                                  *  [default: glop]
  --mrsort.weights-profiles-breed.profiles-strategy [accuracy-heuristic]
                                  The strategy to use to improve the profiles
                                  of the MRSort models. See (@todo Add link to
                                  doc) for details about the available
                                  strategies.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                  
                                  *  [default: accuracy-heuristic]
  --mrsort.weights-profiles-breed.accuracy-heuristic.processor [cpu|gpu]
                                  The processor to use to improve the profiles
                                  of the MRSort models.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                   - '--mrsort.weights-profiles-breed.profiles-strategy' is 'accuracy-heuristic'
                                  
                                  *  [default: cpu]
  --mrsort.weights-profiles-breed.breed-strategy [reinitialize-least-accurate]
                                  The strategy to use to breed the MRSort
                                  models. See (@todo Add link to doc) for
                                  details about the available strategies.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                  
                                  *  [default: reinitialize-least-accurate]
  --mrsort.weights-profiles-breed.reinitialize-least-accurate.portion FLOAT RANGE
                                  The portion of the least accurate MRSort
                                  models to reinitialize.
                                  
                                  Only valid if:
                                   - '--model-type' is 'mrsort'
                                   - '--mrsort.strategy' is 'weights-profiles-breed'
                                   - '--mrsort.weights-profiles-breed.breed-strategy' is 'reinitialize-least-accurate'
                                  
                                  *  [default: 0.5; 0.0<=x<=1.0]
  --help                          Show this message and exit.

lincs classify
==============

Usage: lincs classify [OPTIONS] DOMAIN MODEL ALTERNATIVES
                      [OUTPUT_CLASSIFIED_ALTERNATIVES]

  Classify alternatives.

  DOMAIN is a *classification domain* file. MODEL is a *classification model*
  file for that domain. ALTERNATIVES is an *unclassified alternatives* file
  for that domain.

  The *classified alternatives* file is written to
  OUTPUT_CLASSIFIED_ALTERNATIVES, which defaults to - to write to standard
  output.

Options:
  --help  Show this message and exit.

lincs classification-accuracy
=============================

Usage: lincs classification-accuracy [OPTIONS] DOMAIN MODEL TESTING_SET

  Compute a classification accuracy.

  DOMAIN is a *classification domain* file. MODEL is a *classification model*
  file for that domain. TESTING_SET is a *classified alternatives* file for
  that domain.

  The classification accuracy is written to standard output as an integer
  between 0 and the number of alternatives.

Options:
  --help  Show this message and exit.

lincs.Alternative
=================

category
--------

name
----

profile
-------

lincs.AlternativesSet
=====================

alternatives
------------

dump
----


dump( (AlternativesSet)self, (object)out) -> None :
    Dump the set of alternatives to the provided `.write()`-supporting file-like object, in CSV format.

    C++ signature :
        void dump(lincs::AlternativesSet,boost::python::api::object {lvalue})

lincs.Boundary
==============

profile
-------

sufficient_coalitions
---------------------

lincs.Category
==============

name
----

lincs.CategoryCorrelation
=========================

growing
-------

lincs.Criterion
===============

category_correlation
--------------------

name
----

value_type
----------

lincs.Domain
============

categories
----------

criteria
--------

dump
----


dump( (Domain)self, (object)out) -> None :
    Dump the domain to the provided `.write()`-supporting file-like object, in YAML format.

    C++ signature :
        void dump(lincs::Domain,boost::python::api::object {lvalue})

lincs.Model
===========

boundaries
----------

dump
----


dump( (Model)self, (object)out) -> None :
    Dump the model to the provided `.write()`-supporting file-like object, in YAML format.

    C++ signature :
        void dump(lincs::Model,boost::python::api::object {lvalue})

lincs.SufficientCoalitions
==========================

criterion_weights
-----------------

kind
----

lincs.SufficientCoalitionsKind
==============================

weights
-------

lincs.ValueType
===============

real
----

lincs.command_line_interface
============================

lincs.generate_alternatives
===========================


generate_alternatives( (Domain)domain, (Model)model, (int)alternatives_count, (int)random_seed) -> AlternativesSet :
    Generate a set of `alternatives_count` pseudo-random alternatives for the provided `domain`, classified according to the provided `model`.

    C++ signature :
        lincs::AlternativesSet generate_alternatives(lincs::Domain*,lincs::Model*,unsigned int,unsigned int)

lincs.generate_domain
=====================


generate_domain( (int)criteria_count, (int)categories_count, (int)random_seed) -> Domain :
    Generate a domain with `criteria_count` criteria and `categories_count` categories.

    C++ signature :
        lincs::Domain generate_domain(unsigned int,unsigned int,unsigned int)

lincs.generate_mrsort_model
===========================


generate_mrsort_model( (Domain)domain, (int)random_seed) -> Model :
    Generate an MR-Sort model for the provided `domain`.

    C++ signature :
        lincs::Model generate_mrsort_model(lincs::Domain*,unsigned int)

lincs.load_alternatives
=======================


load_alternatives( (Domain)domain, (object)in) -> AlternativesSet :
    Load a set of classified alternatives from the provided `.read()`-supporting file-like object, in CSV format.

    C++ signature :
        lincs::AlternativesSet load_alternatives(lincs::Domain*,boost::python::api::object {lvalue})

lincs.load_domain
=================


load_domain( (object)in) -> Domain :
    Load a domain from the provided `.read()`-supporting file-like object, in YAML format.

    C++ signature :
        lincs::Domain load_domain(boost::python::api::object {lvalue})

lincs.load_model
================


load_model( (Domain)domain, (object)in) -> Model :
    Load a model for the provided `domain`, from the provided `.read()`-supporting file-like object, in YAML format.

    C++ signature :
        lincs::Model load_model(lincs::Domain*,boost::python::api::object {lvalue})

